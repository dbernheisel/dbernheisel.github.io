{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["PostDataPoint","_ref","field","children","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","PostSubHeader","_ref2","post","tags","lodash_get__WEBPACK_IMPORTED_MODULE_6___default","frontmatter","date","originalUrl","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_5__","OutboundLink","href","timeToRead","some","map","tag","key","BlogIndex","render","siteTitle","this","siteDescription","posts","_components_layout__WEBPACK_IMPORTED_MODULE_8__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_7___default","htmlAttributes","lang","meta","name","content","title","_ref3","node","fields","slug","excerpt","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","dangerouslySetInnerHTML","__html","Component","__webpack_exports__","default","h","pageQuery"],"mappings":"4PAQMA,EAAgB,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,SAC7B,OAAID,EAEAE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,KACCJ,GAIE,MAILK,EAAgB,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAChBC,EAAOC,IAAIF,EAAM,wBAEvB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,YAAOI,EAAKG,YAAYC,MACxBV,EAAAC,EAAAC,cAACN,GAAcE,MAAOQ,EAAKG,YAAYE,aACrCX,EAAAC,EAAAC,cAACU,EAAAC,cAAaC,KAAMR,EAAKG,YAAYE,aAArC,wBAIFX,EAAAC,EAAAC,cAACN,GAAcE,MAAOQ,EAAKS,YACzBf,EAAAC,EAAAC,cAAA,YAAOI,EAAKS,WAAZ,WAEFf,EAAAC,EAAAC,cAACN,GAAcE,MAAOS,EAAKS,KAAK,uBAC7BT,EAAKU,IAAI,SAAAC,GACR,OACElB,EAAAC,EAAAC,cAAA,QAAMiB,IAAKD,EAAKf,UAAU,QAAQe,QAQxCE,4FACJC,kBACE,IAAMC,EAAYd,IAAIe,KAAM,sCACtBC,EAAkBhB,IACtBe,KACA,4CAEIE,EAAQjB,IAAIe,KAAM,sCAExB,OACEvB,EAAAC,EAAAC,cAACwB,EAAAzB,GAAO0B,SAAUJ,KAAKK,MAAMD,UAC3B3B,EAAAC,EAAAC,cAAC2B,EAAA5B,GACC6B,gBAAkBC,KAAM,MACxBC,OAASC,KAAM,cAAeC,QAASV,IACvCW,MAAOb,IAERG,EAAMR,IAAI,SAAAmB,GAAc,IAAXC,EAAWD,EAAXC,KACNF,EAAQ3B,IAAI6B,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAUhC,IAAI6B,EAAM,wBAA0BA,EAAKG,QAEzD,OACExC,EAAAC,EAAAC,cAAA,OAAKiB,IAAKkB,EAAKC,OAAOC,KAAMpC,UAAU,cACpCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAACuC,EAAAC,MAAKC,GAAIN,EAAKC,OAAOC,MACnBJ,IAGLnC,EAAAC,EAAAC,cAACE,GAAcE,KAAM+B,IACrBrC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiByC,yBAA2BC,OAAQL,YA5BzEpB,CAAkBpB,EAAAC,EAAM6C,WAqC9BC,EAAAC,QAAAC,EACO,IAAMC","file":"component---src-pages-index-js-144dbc90888845768bb7.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/layout'\n\nconst PostDataPoint = ({field, children}) => {\n  if (field) {\n    return (\n      <span>\n        <span className=\"mx-2\">|</span>\n        {children}\n      </span>\n    )\n  } else {\n    return null\n  }\n}\n\nconst PostSubHeader = ({post}) => {\n  const tags = get(post, 'frontmatter.tags') || []\n\n  return (\n    <div className='frontmatter mb-2 mt-0'>\n      <span>{post.frontmatter.date}</span>\n      <PostDataPoint field={post.frontmatter.originalUrl}>\n        <OutboundLink href={post.frontmatter.originalUrl}>\n          Original Publishing\n        </OutboundLink>\n      </PostDataPoint>\n      <PostDataPoint field={post.timeToRead}>\n        <span>{post.timeToRead}m Read</span>\n      </PostDataPoint>\n      <PostDataPoint field={tags.some(() => true)}>\n        {tags.map(tag => {\n          return (\n            <span key={tag} className='ml-2'>{tag}</span>\n          )}\n        )}\n      </PostDataPoint>\n    </div>\n  )\n}\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          const excerpt = get(node, 'frontmatter.excerpt') || node.excerpt\n\n          return (\n            <div key={node.fields.slug} className='mb-12 mt-0'>\n              <h1 className='mb-0 post-header'>\n                <Link to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h1>\n              <PostSubHeader post={node} />\n              <p className='leading-normal' dangerouslySetInnerHTML={{ __html: excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tags\n            originalUrl\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}