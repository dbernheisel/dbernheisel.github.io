{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/querying-embedded-maps-in-postgresql-with-ecto/","result":{"data":{"site":{"siteMetadata":{"title":"David Bernheisel","author":"David Bernheisel"}},"markdownRemark":{"id":"0505631a-c17a-5bbd-a428-3bd53b259ba8","excerpt":"Structs and maps are easy to work with in Elixir, but if they are stored\nin the database as JSON and accessed via an Ecto Schema, it’s not as\nclear how to query them. We’re going to explore how to do that, and make\nit clear and easy.","timeToRead":5,"html":"<p>Structs and maps are easy to work with in Elixir, but if they are stored\nin the database as JSON and accessed via an Ecto Schema, it’s not as\nclear how to query them. We’re going to explore how to do that, and make\nit clear and easy.</p>\n<!-- excerpt -->\n<p>PostgreSQL has <a href=\"https://www.postgresql.org/docs/current/static/functions-json.html\">great support for objects stored as JSON</a>.\nThis is useful for those moments when you need to store data that could\nbe variably structured, such as responses from other services’ APIs, or\ndata that frequently travels together within your relational tables.</p>\n<p>A common trade-off for mixing scalar column data types (like <code>varchar</code>\nor <code>integer</code>) with column data types that handle more-complicated\nobjects (like <abbr title=\"JavaScript Object Notation\">JSON</abbr>) is\nthat <abbr title=\"Object-relational Mapping\">ORMs</abbr> or data mappers\nsometimes can’t introspect on them for you, which means it becomes much\nharder to query that data.</p>\n<p>Using Ecto’s <code>embedded_schema</code> helps introspect on those known values,\nbut it doesn’t really assist you with querying those fields in SQL. This\nis where I became extremely greatful for <a href=\"https://hexdocs.pm/ecto/Ecto.Query.html#module-fragments\">Ecto’s escape\nhatch</a>: <code>fragment()</code>.</p>\n<h2>Define the Struct or Map in Ecto</h2>\n<p>Let’s dive into some code as an example:</p>\n<p>I have a <code>Vehicle.Photo</code> schema that has several versions of the photo:</p>\n<ul>\n<li>craigslist_ad</li>\n<li>facebook_ad</li>\n<li>facebook_carousel_ad</li>\n<li>extra_large</li>\n<li>extra_small</li>\n<li>large</li>\n<li>medium</li>\n<li>original</li>\n<li>small</li>\n</ul>\n<p>We decided to store the versions’ <abbr title=\"Uniform Resource\nLocators\">URLs</abbr> inside a map in the database,\nbecause we’re going to use a set of the URLs at the same time inside of\nan HTML <code>&#x3C;img srcset /></code>. <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">You can read more about srcset from\nMDN and how it helps with responsive images</a>.</p>\n<p>The Ecto migration looks like this:</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">def</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">up</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  alter table(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:vehicle_photos</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">) </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    add </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:standard_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:map</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    add </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:facebook_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:map</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    add </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:craigslist_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:map</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<p>The Ecto schema looks like this:</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">schema </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;vehicle_photos&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:file</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">PhotoUploader</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Type</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  embeds_one </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:standard_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">StandardUrls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">on_replace:</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:update</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:extra_large</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:extra_small</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:large</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:medium</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:original</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:small</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  embeds_one </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:facebook_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">FacebookUrls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">on_replace:</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:update</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:hero_ad</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:carousel_ad</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  embeds_one </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:craigslist_urls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">CraigslistUrls</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">on_replace:</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:update</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:ad</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:string</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<p>Since this is a known structure, Ecto can introspect on the JSON values and\ncast and dump them to the appropriate Elixir data types, which is immensely\nhelpful. Here I am achieving that by using <code>embeds_one</code> and specifying the\nstruct. Once pulled from the database, Ecto will decode them.</p>\n<p>Other times, you may not be able to do this ahead of time, so the schema\nmight look like this (the <code>api_response</code> field):</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">schema </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;vehicle_photos&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:file</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">PhotoUploader</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Type</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  field(</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:api_response</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">:map</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<h2>Query the JSON</h2>\n<p>Continuing with the struct example schema, we found out that some of our\nURLs weren’t being populated like we expected, so I had to find those\nphotos and fix them. How do I query for them since they’re stored in\nPostgreSQL as JSON? We need to drop down into raw SQL:</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">def</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">where_photo_urls_have_a_null</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">(</span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">query</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">) </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  query</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">|&gt;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> where([</span><span class=\"grvsc-t5WxC3-7 grvsc-t5WxC3-i grvsc-t88nfI-3\">_q</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">], fragment(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (facebook_urls IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (facebook_urls-&gt;&gt;&#39;ad_version&#39; IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (facebook_urls-&gt;&gt;&#39;hero_version&#39; IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (craigslist_urls-&gt;&gt;&#39;ad&#39; IS NULL)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    &quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  ))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<p>The SQL operator <code>->></code> will leverage <a href=\"https://www.postgresql.org/docs/current/static/functions-json.html\">PostgreSQL’s JSON\nfunctions</a> to retrieve the text or integers that are stored\nin the JSON. You can access them using this syntax: <code>column->>key</code>. In\nmy case, I needed to find if the column was null, or it wasn’t null,\nthen to ask if the JSON object has any keys that are null.  This will\nwork regardless of whether you use an embedded struct or a map, because\nPostgreSQL sees it as the same thing: JSON.</p>\n<p>Here’s an example that checks for substrings:</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">def</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">where_photo_url_wrong</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">(</span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">query</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">) </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  query</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">|&gt;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> where([</span><span class=\"grvsc-t5WxC3-7 grvsc-t5WxC3-i grvsc-t88nfI-3\">_q</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">], fragment(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (facebook_urls-&gt;&gt;&#39;hero_ad&#39; NOT ILIKE ?) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (facebook_urls-&gt;&gt;&#39;carousel_ad&#39; NOT ILIKE ?) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    (craigslist_urls-&gt;&gt;&#39;ad&#39; NOT ILIKE ?)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">    &quot;&quot;&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%facebook_hero_ad%&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%facebook_carousel_ad%&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%craigslist_ad%&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  ))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<h2>Make the Query Composable</h2>\n<p>Above is all I needed for my use case, but I wondered how I could continue\nquerying those fields in a reusable way. For example, how do I chain these\ntogether in an <code>OR</code> statement that uses both of these fragments?</p>\n<p>To do that, I’ll need to extract the <code>fragment</code> expressions and put them\ninto a macro so they can be used within Ecto’s functions.</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">defmodule</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-4 grvsc-t88nfI-1\">MyProject.SampleQuery.Fragments</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-7\">import</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Ecto</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Query</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">API</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">only:</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> [</span><span class=\"grvsc-t5WxC3-8 grvsc-t88nfI-4\">fragment:</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-4\">1</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">defmacro</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">photo_urls_have_a_null</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">quote</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      fragment(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">        </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (facebook_urls IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (facebook_urls-&gt;&gt;&#39;ad_version&#39; IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (facebook_urls-&gt;&gt;&#39;hero_version&#39; IS NULL) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (craigslist_urls-&gt;&gt;&#39;ad&#39; IS NULL)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        &quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">defmacro</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">photo_urls_not_contain</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">([</span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">hero_ad_value</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">carousel_ad_value</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">, </span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">ad_value</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">]) </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">quote</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      fragment(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">        </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (facebook_urls-&gt;&gt;&#39;hero_ad&#39; NOT ILIKE ?) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (facebook_urls-&gt;&gt;&#39;carousel_ad&#39; NOT ILIKE ?) OR</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        (craigslist_urls-&gt;&gt;&#39;ad&#39; NOT ILIKE ?)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">        &quot;&quot;&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">        ^</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">#{</span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">unquote</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">(hero_ad_value)</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">}</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">%&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">        ^</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">#{</span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">unquote</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">(carousel_ad_value)</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">}</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">%&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">        ^</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;%</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">#{</span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">unquote</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">(ad_value)</span><span class=\"grvsc-t5WxC3-15 grvsc-t88nfI-6\">}</span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">%&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<p>Now that those fragments are extracted, let’s use them:</p>\n<pre class=\"grvsc-container atom-one-light grvsc-mm-t88nfI\" data-language=\"elixir\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-7\">import</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">MyProject</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">SampleQuery</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Fragments</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-7\">alias</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">MyProject</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.</span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Photo</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">defmodule</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-4 grvsc-t88nfI-1\">MyProject.SampleQuery</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">def</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-9 grvsc-t88nfI-5\">find_bad_photos</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">(</span><span class=\"grvsc-t5WxC3-6 grvsc-t5WxC3-i grvsc-t88nfI-1\">query</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">\\\\</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Photo</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">) </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    query</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">|&gt;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> where([</span><span class=\"grvsc-t5WxC3-7 grvsc-t5WxC3-i grvsc-t88nfI-3\">_p</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">], photo_urls_have_a_null())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">|&gt;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> or_where([</span><span class=\"grvsc-t5WxC3-7 grvsc-t5WxC3-i grvsc-t88nfI-3\">_p</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">], photo_urls_not_contain([</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;facebook_hero_ad&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;facebook_carousel_ad&quot;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">      </span><span class=\"grvsc-t5WxC3-10 grvsc-t88nfI-6\">&quot;craigslist_ad&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    ]))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">    </span><span class=\"grvsc-t5WxC3-6 grvsc-t88nfI-7\">|&gt;</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\"> </span><span class=\"grvsc-t5WxC3-5 grvsc-t88nfI-1\">Repo</span><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">.all</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-1 grvsc-t88nfI-1\">  </span><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-t5WxC3-14 grvsc-t88nfI-7\">end</span></span></span></code></pre>\n<p><strong>Beautiful.</strong></p>\n<p>If you’d like to check out the code a little more, you can see this\n<a href=\"https://github.com/dbernheisel/sample_json_ecto_queries\">sample Ecto and Phoenix repo with tests</a>.</p>\n<p>This article only explains how to query a JSON object in the database\nand how it works with Ecto querying. If you’re needing to store an array\nof maps or structs, then check out Jon’s post <a href=\"https://robots.thoughtbot.com/why-ecto-s-way-of-storing-embedded-lists-of-maps-makes-querying-hard\">Why Ecto’s Way of\nStoring Embedded Lists of Maps Makes Querying Hard</a>.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .atom-one-light {\n    background-color: #FAFAFA;\n    color: #383A42;\n  }\n  .atom-one-light .grvsc-t5WxC3-i { font-style: italic; }\n  .atom-one-light .grvsc-t5WxC3-14 { color: #A626A4; }\n  .atom-one-light .grvsc-t5WxC3-1 { color: #383A42; }\n  .atom-one-light .grvsc-t5WxC3-9 { color: #4078F2; }\n  .atom-one-light .grvsc-t5WxC3-8 { color: #0184BC; }\n  .atom-one-light .grvsc-t5WxC3-10 { color: #50A14F; }\n  .atom-one-light .grvsc-t5WxC3-5 { color: #E45649; }\n  .atom-one-light .grvsc-t5WxC3-6 { color: #986801; }\n  .atom-one-light .grvsc-t5WxC3-7 { color: #A0A1A7; }\n  .atom-one-light .grvsc-t5WxC3-4 { color: #C18401; }\n  .atom-one-light .grvsc-t5WxC3-15 { color: #CA1243; }\n  .atom-one-light .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  \n  /* Monokai Phoenix */\n  @media (prefers-color-scheme: dark) {\n    .grvsc-mm-t88nfI {\n      background-color: #1e1e1e;\n      color: #F8F8F2;\n    }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-7 { color: #F92672; }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-1 { color: #F8F8F2; }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-5 { color: #A6E22E; }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-4 { color: #AE81FF; }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-6 { color: #E6DB74; }\n    .grvsc-mm-t88nfI .grvsc-t88nfI-3 { color: #75715E; }\n    .grvsc-mm-t88nfI .grvsc-line-highlighted::before {\n      background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n      box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n    }\n  }\n</style>","frontmatter":{"title":"Querying an Embedded Map in PostgreSQL with Ecto","date":"March 09, 2018","tags":["elixir"],"originalUrl":"https://robots.thoughtbot.com/querying-embedded-maps-in-postgresql-with-ecto"}}},"pageContext":{"slug":"/blog/querying-embedded-maps-in-postgresql-with-ecto/","previous":{"fields":{"slug":"/blog/testing-emails-with-bamboo/"},"frontmatter":{"title":"Testing Random Data in Emails with Bamboo","tags":["elixir"],"originalUrl":"https://robots.thoughtbot.com/testing-emails-with-bamboo","excerpt":null}},"next":{"fields":{"slug":"/blog/ruby-rails-and-circle-ci-workflows/"},"frontmatter":{"title":"Ruby, Rails, and CircleCI 2.0 Workflows","tags":["ruby"],"originalUrl":"https://www.viget.com/articles/ruby-rails-and-circle-ci-2-0/","excerpt":"Know your tools -- CircleCI 2.0 Workflows\n"}}}}}