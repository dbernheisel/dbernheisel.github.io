{"data":{"site":{"siteMetadata":{"title":"David Bernheisel","author":"David Bernheisel"}},"markdownRemark":{"id":"239895c7-119c-555b-9f42-bcb778b5dd45","excerpt":"\nUgh... three lines for a simple text input for a form in Phoenix? How about one with Formulator?\n\n","html":"<p>Ugh… three lines for a simple text input for a form in Phoenix? How about one with Formulator?</p>\n<!-- excerpt -->\n<p>tldr:</p>\n<p>instead of</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">&lt;<span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> label form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> email_input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> error_tag form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> label form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:first_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> text_input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:first_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> error_tag form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:first_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> label form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:last_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> text_input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:last_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> error_tag form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:last_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>do this with Formulator:</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">&lt;<span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">as:</span> <span class=\"token atom symbol\">:email</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:first_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:last_name</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span></code></pre></div>\n<!--excerpt-->\n<p><a href=\"http://blog.plataformatec.com.br/2016/09/dynamic-forms-with-phoenix/\">Platformatec has a great post about dynamic forms with\nPhoenix</a>\nthat teaches developers how to extract some common steps out to their own functions.\nThis is helpful because developers can skip the tedious parts that they tend to repeat,\nwhich also helps keep style consistent across a larger framework for an\napplication.</p>\n<p>Other times, developers don’t need (or want) to build CSS classes into the back-end,\nor they want to give more flexibility to designers later, or they just don’t want\nto start from scratch again when they start another application. (It’s hard to find\nthat balance sometimes, isn’t it?)</p>\n<p>Enter: <a href=\"https://hexdocs.pm/formulator\">Formulator</a></p>\n<p>Formulator brings some simplicity to making form inputs for Phoenix, while still\ngiving the developer some customization options.</p>\n<p>For example, need a specific class for an input field?</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">&lt;<span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">as:</span> <span class=\"token atom symbol\">:email</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">class:</span> <span class=\"token string\">\"magical-email-input\"</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>or need to class up a label?</p>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">&lt;<span class=\"token punctuation\">%</span><span class=\"token operator\">=</span> input form<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:email_address</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">as:</span> <span class=\"token atom symbol\">:email</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">class:</span> <span class=\"token string\">\"magical-email-input\"</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">label:</span> <span class=\"token punctuation\">[</span><span class=\"token attr-name\">class:</span>\n<span class=\"token string\">\"magical-email-label\"</span> <span class=\"token punctuation\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>If you’re a Rails developer and new to Phoenix, you’ll soon discover that Phoenix\ntries to get the form errors closer to the input tags themselves, as opposed to Rails\nwhere error messages are typically flashed near the top of a page. Getting used to\nthis difference is like putting my toothbrush on the other side of the sink, I\ntend to forget the <code class=\"language-text\">error_tag</code> when making a new form and wonder for about 5\nminutes why my test can’t find the error text I’m expecting. Formulator saves me\nsome keystrokes and keeps me from forgetting error tags.</p>\n<p>We made Formulator because we realized we were repeating ourselves waaaay\ntoo much for simple stuff. It’s a ridiculously simple library (just\ncheck out the <a href=\"https://github.com/thoughtbot/formulator\">source code</a>). Give it\nand try and let us know what you think!</p>","frontmatter":{"title":"Simple Phoenix Text Inputs with Formulator","date":"June 30, 2017","tags":["elixir"],"originalUrl":"https://robots.thoughtbot.com/simple-phoenix-text-inputs-with-formulator"}}},"pageContext":{"slug":"/blog/simple-phoenix-text-inputs-with-formulator/","previous":{"fields":{"slug":"/blog/intro-to-elixir-phoenix-and-umbrellas/"},"frontmatter":{"title":"Introduction to Elixir, Phoenix, and Umbrella Apps","tags":["elixir"],"originalUrl":null}},"next":{"fields":{"slug":"/blog/lessons-from-using-phoenix-1-3/"},"frontmatter":{"title":"Lessons From Using Phoenix 1.3","tags":["elixir"],"originalUrl":"https://robots.thoughtbot.com/lessons-from-using-phoenix-1-3"}}}}